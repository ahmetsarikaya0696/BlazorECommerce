@inject IProductService ProductService;
@implements IDisposable

@if (ProductService.Products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in ProductService.Products)
        {
            <li class="media bg-light my-3">
                <div class="media-img-wrapper me-2">
                    <a href="/products/@product.Id">
                        <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/products/@product.Id">
                        <h4 class="mb-0">@product.Title</h4>
                    </a>
                    <p>@product.Description</p>
                    <h5 class="price">
                        @* @product.Price <span>₺</span> *@
                    </h5>
                </div>
            </li>
        }
    </ul>
}

@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }
}
